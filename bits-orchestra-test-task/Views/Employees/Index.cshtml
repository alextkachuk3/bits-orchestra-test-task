@{
    ViewData["Title"] = "Home Page";

    List<Employee> employees = Model;
}

<div class="text-center row">
    @if (employees.Count == 0)
    {
        <p>There are no employees in the database.</p>
    }
    else
    {
        <div class="panel">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th class="col-2">
                            <input type="text" class="form-control filter-input" id="filterName" placeholder="Filter Name" />
                        </th>
                        <th class="col-2">
                            <input type="date" class="form-control filter-input" id="filterDOB" />
                        </th>
                        <th class="col-1">
                            
                        </th>
                        <th class="col-2">
                            <input type="text" class="form-control filter-input" id="filterPhone" placeholder="Filter Phone" />
                        </th>
                        <th class="col-2">
                            <input type="number" class="form-control filter-input" id="filterSalary" placeholder="Filter Salary" />
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var employee in employees)
                    {
                        <tr class="paginate-show">
                            <td class="col-2">
                                <input type="text" class="form-control update-input" id="employeeName-@employee.Id" data-id="@employee.Id" value="@employee.Name" />
                            </td>
                            <td class="col-2">
                                <input type="date" class="form-control update-input" id="employeeDOB-@employee.Id" data-id="@employee.Id" value="@employee.DateOfBirth.ToString("yyyy-MM-dd")" />
                            </td>
                            <td class="col-1">
                                <input class="form-check-input update-input" type="checkbox" id="employeeIsMarried-@employee.Id" data-id="@employee.Id" @(employee.IsMarried ? "checked" : "") />
                            </td>
                            <td class="col-2">
                                <input type="text" class="form-control update-input" id="employeePhone-@employee.Id" data-id="@employee.Id" value="@employee.Phone" />
                            </td>
                            <td class="col-2">
                                <input type="number" class="form-control update-input" id="employeeSalary-@employee.Id" data-id="@employee.Id" value="@employee.Salary" />
                            </td>
                            <td class="col-1">
                                <button class="btn btn-danger btn-sm rounded-0 delete-btn" type="button" title="Delete" data-id="@employee.Id">
                                    <img class="table-icon" src="~/trash.png" />
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.update-input').on('change', function () {
                let employeeId = $(this).data('id');
                let updatedName = $('#employeeName-' + employeeId).val();
                let updatedDOB = $('#employeeDOB-' + employeeId).val();
                let updatedIsMarried = $('#employeeIsMarried-' + employeeId).is(':checked');
                let updatedPhone = $('#employeePhone-' + employeeId).val();
                let updatedSalary = $('#employeeSalary-' + employeeId).val();

                let employeeData = {
                    Id: employeeId,
                    Name: updatedName,
                    DateOfBirth: updatedDOB,
                    IsMarried: updatedIsMarried,
                    Phone: updatedPhone,
                    Salary: updatedSalary
                };

                $.ajax({
                    url: '/Employees/UpdateEmployee',
                    type: 'POST',
                    data: employeeData,
                    success: function (response) {
                        console.log('Employee updated successfully.');
                    },
                    error: function (error) {
                        console.log('Error updating employee:', error);
                    }
                });
            });

            $('.filter-input').on('input change', function () {
                let filterName = $('#filterName').val().toLowerCase();
                let filterDOB = $('#filterDOB').val();
                let filterPhone = $('#filterPhone').val().toLowerCase();
                let filterSalary = $('#filterSalary').val();

                $('.paginate-show').filter(function () {
                    let employeeName = $(this).find('input[id^="employeeName"]').val().toLowerCase();
                    let employeeDOB = $(this).find('input[id^="employeeDOB"]').val();
                    let employeePhone = $(this).find('input[id^="employeePhone"]').val().toLowerCase();
                    let employeeSalary = $(this).find('input[id^="employeeSalary"]').val();

                    $(this).toggle(
                        (employeeName.indexOf(filterName) > -1 || !filterName) &&
                        (employeeDOB.indexOf(filterDOB) > -1 || !filterDOB) &&
                        (employeePhone.indexOf(filterPhone) > -1 || !filterPhone) &&
                        (employeeSalary.indexOf(filterSalary) > -1 || !filterSalary)
                    );
                });
            });

            $('.btn-danger').on('click', function () {
                let employeeId = $(this).closest('tr').find('input').data('id');
                let row = $(this).closest('tr');

                $.ajax({
                    url: '/Employees/DeleteEmployee',
                    type: 'POST',
                    data: { id: employeeId },
                    success: function (result) {
                        row.remove();
                    },
                    error: function (xhr, status, error) {
                        alert("Error deleting employee: " + error);
                    }
                });
            });
        });
    </script>
}
